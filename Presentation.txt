Slide 1: Title: <name>: Botnet Detection Tool using LightGBM
	Photos and name of three team members
	Background of Light colour and Tech-like


Slide 2: Machine Learning Pipeline :
	 In boxes : 
	Step 1				Step 2				Step 3			Step 4
Feature Extraction		Feature Selection		Building Model			Testing Model

o Data was manually		o Feature Selection		o Used LightGBM based		o Model was tested
examined, for getting		algorithms were			GBDT model as classifier	with 10% of Total Data
understanding			run on Train set
												o Accuracy: 99.90%
o Multiple Research		o Initially we had		o LightGBM is more robust	  
Papers were consulted	--->	23 features in total	--->	and less prone to	 --->	o Precision: 99.93%
to identify possibly						overfitting
important as well as		o We used Select-K-Best						o Recall: 99.95%
exhaustive set of		and Recursive Feature		o Cross-validation set size
features			Elimination (RFE)		was set to 33.33% of total	o F1 Score: 99.94%
								train data available
o Raw data files		o Based on the two
were parsed and			results, we selected		o Cross-val Accuracy was
decided features		the 12 best features		used as evaluation metric
were extracted
								o Batch-learning was used
o Dataset was split						with Batch-size of 10k.
into Train and Test
Sets.
Total Data: 2.57M


Slide 3: Step 3 and Step 4


Slide 4: <name> : A Unique Approach to Botnet Detection

	1. We consulted multiple Research Papers and found that most research papers only used a subset of features
	However, we decided to combine them to create an exhaustive Feature Space, from which we extracted only the best.

	2. Besides flow based features that we found in research papers, we also hand-engineered certain statistical features
	after manual inspection of sample files.

	3. The research papers mostly dealt with classification of general Botnets. We focused on P2P Botnets only
	and removed features pertaining to IRC Botnets.

	4. Most previous approached used basic ML algorithms like Naive Bayes and Random Forest, while some were computation
	intensive like Neural Networks.

	5. We used sophisticated approach of LightGBM based on GBDT model to classify. This not only reduced Training Time
	but also increased Accuracy. It is also easier to augment new Train Data and retrain to detect novel Botnets.


Slide 5: Possible Improvements:

	1. In this approach, we only considered Flow-based features using 5-tuples. We would like to integrate Conversation
	based features in the classification model.

	2. Two approaches : Host-based and Network-based. We aim to integrate them to make the tool more robust.

	3. Automated Data Collection by Packet Capture and subsequent Classification.

Slide 6: 
	
	Present Scenario :
	1. Attackers use Botnets to launch DDoS, Phishing, Data Stealing and Spamming.
	2. Size of Botnets are often huge and millions of infected hosts may be in it.
	3. Presently, all tools require manual inspection after warning is generated by the tool.
	4. A lot of time and expertise is required for such tools.

Slide 7:

	Our Solution :
	1. Completely automated procedure.
	2. Fast retraining and robust.
	3. Real-time detection.
	4. Ease of use, even by non-experts.